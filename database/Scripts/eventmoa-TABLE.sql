--유저 테이블
CREATE TABLE TABLE_USER (
   user_Id varchar2(100) not null,
   user_Pw varchar2(100) not null,
   user_Name varchar2(100), 
   user_Email varchar2(200) not null,
   user_Email_Hash varchar2(200),
   user_Zipcode varchar2(20) not null,
   user_Address varchar2(300)not null,
   user_Address_Detail varchar2(300),
   user_Address_Etc varchar2(100),
   user_Point NUMBER(10) DEFAULT 0,
   CONSTRAINT EVENT_USER_PK PRIMARY KEY(user_Id)
);
INSERT INTO TABLE_USER VALUES(
'test', '111', 'aaa', 'aa', 'aa', 'aa','aa','aa','aa', 300
);

------------------------------
--자유 게시판(게시판)
CREATE SEQUENCE BOARD_SEQ_freeTalk;

CREATE TABLE TABLE_BOARD_freeTalk(
   BOARD_NUM NUMBER(10),
   BOARD_TITLE varchar2(1000),
   BOARD_CONTENT varchar2(3000),
   BOARD_ID varchar2(100),
   BOARD_VIEW NUMBER(10) DEFAULT 0,
   BOARD_DATE DATE,
   BOARD_CATEGORY varchar2(20) DEFAULT 'FREE',
   CONSTRAINT BOARD_freeTalk_PK PRIMARY KEY(BOARD_NUM),
   CONSTRAINT BOARD_freeTalk_FK FOREIGN KEY(BOARD_ID) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

--자유 게시판(댓글)
CREATE SEQUENCE REPLY_SEQ_freeTalk;

CREATE TABLE TABLE_REPLY_freeTalk(
   REPLY_NUM NUMBER(10),
   BOARD_NUM NUMBER(10),
   user_Id varchar2(100),
   REPLY_CONTENT varchar2(4000),
   REPLY_DATE DATE,
   BOARD_CATEGORY varchar2(20) DEFAULT 'FREE',
   CONSTRAINT REPLY_freeTalk_PK PRIMARY KEY(REPLY_NUM),
   CONSTRAINT REPLY_freeTalk_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_freeTalk(BOARD_NUM) ON DELETE CASCADE,
   CONSTRAINT REPLY_freeTalk_MEMBER_FK FOREIGN KEY(user_Id) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

--자유 게시판(파일)
CREATE TABLE TABLE_FILES_freeTalk (   
   FILE_NAME varchar2(2000),
   BOARD_NUM NUMBER(10),
   CONSTRAINT FILES_freeTalk_PK PRIMARY KEY(FILE_NAME),
   CONSTRAINT FILES_freeTalk_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_freeTalk(BOARD_NUM) ON DELETE CASCADE
);

------------------------------

--리뷰 게시판(게시판)
CREATE SEQUENCE BOARD_SEQ_REVIEW;

CREATE TABLE TABLE_BOARD_REVIEW(
   BOARD_NUM NUMBER(10),
   BOARD_TITLE varchar2(1000),
   BOARD_CONTENT varchar2(3000),
   BOARD_ID varchar2(100),
   BOARD_VIEW NUMBER(10) DEFAULT 0,
   BOARD_DATE DATE,
   BOARD_CATEGORY varchar2(20) DEFAULT 'REVIEW',
   E_BOARD_NUM NUMBER(10),
   CONSTRAINT BOARD_REVIEW_PK PRIMARY KEY(BOARD_NUM),
   CONSTRAINT REVIEW_EVENT_NUM_FK FOREIGN KEY(E_BOARD_NUM) REFERENCES TABLE_BOARD_EVENT(BOARD_NUM);
   CONSTRAINT BOARD_REVIEW_FK FOREIGN KEY(BOARD_ID) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

--리뷰 게시판(댓글)
CREATE SEQUENCE REPLY_SEQ_REVIEW;

CREATE TABLE TABLE_REPLY_REVIEW(
   REPLY_NUM NUMBER(10),
      BOARD_NUM NUMBER(10),
      user_Id varchar2(100),
     REPLY_CONTENT varchar2(4000),
     REPLY_DATE DATE,
   BOARD_CATEGORY varchar2(20) DEFAULT 'REVIEW',
      CONSTRAINT REPLY_REVIEW_PK PRIMARY KEY(REPLY_NUM),
      CONSTRAINT REPLY_REVIEW_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_REVIEW(BOARD_NUM) ON DELETE CASCADE,
      CONSTRAINT REPLY_REVIEW_MEMBER_FK FOREIGN KEY(user_Id) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

--리뷰 게시판(파일)
CREATE TABLE TABLE_FILES_REVIEW(
   FILE_NAME varchar2(2000),
   BOARD_NUM NUMBER(10),
   CONSTRAINT FILES_REVIEW_PK PRIMARY KEY(FILE_NAME),
   CONSTRAINT FILES_REVIEW_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_REVIEW(BOARD_NUM) ON DELETE CASCADE
);

------------------------------

--이벤트 게시판(게시판)
CREATE SEQUENCE BOARD_SEQ_EVENT;

CREATE TABLE TABLE_BOARD_EVENT(
   BOARD_NUM NUMBER(10),
   BOARD_TITLE varchar2(100),
   BOARD_CONTENT varchar2(3000),
   BOARD_ID varchar2(100),
   BOARD_VIEW NUMBER(10) DEFAULT 0,
   BOARD_DATE DATE,
   BOARD_Zipcode varchar2(20),
   BOARD_Address varchar2(300),
   BOARD_Address_Detail varchar2(300),
   BOARD_Address_Etc varchar2(100),
   EVT_START_DT DATE,
   EVT_END_DT DATE,
   FILE_NAME VARCHAR2(2000),
   BOARD_CALLNUMBER varchar2(20),
   BOARD_PHONENUMBER varchar2(20),
   BOARD_CATEGORY varchar2(20) DEFAULT 'EVENT',
   CONSTRAINT BOARD_EVENT_PK PRIMARY KEY(BOARD_NUM),
   CONSTRAINT BOARD_EVENT_FK FOREIGN KEY(BOARD_ID) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

SELECT * FROM TABLE_BOARD_EVENT;
--이벤트 게시판(댓글)
CREATE SEQUENCE REPLY_SEQ_EVENT;

CREATE TABLE TABLE_REPLY_EVENT (
   REPLY_NUM NUMBER(10),
   BOARD_NUM NUMBER(10),
   user_Id varchar2(100),
   REPLY_CONTENT varchar2(4000),
   REPLY_DATE DATE,
   REPLY_STAR varchar2(30),
   BOARD_CATEGORY varchar2(20) DEFAULT 'EVENT',
   CONSTRAINT REPLY_EVENT_PK PRIMARY KEY(REPLY_NUM),
   CONSTRAINT REPLY_EVENT_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_EVENT(BOARD_NUM) ON DELETE CASCADE,
   CONSTRAINT REPLY_EVENT_MEMBER_FK FOREIGN KEY(user_Id) REFERENCES TABLE_USER(user_Id) ON DELETE CASCADE
);

--이벤트 게시판(파일)
CREATE TABLE TABLE_FILES_EVENT(
   FILE_NAME varchar2(2000),
   BOARD_NUM NUMBER(10),
   CONSTRAINT FILES_EVENT_PK PRIMARY KEY(FILE_NAME),
   CONSTRAINT FILES_EVENT_FK FOREIGN KEY(BOARD_NUM) REFERENCES TABLE_BOARD_EVENT(BOARD_NUM) ON DELETE CASCADE
);

------------------------------

--포인트 게시판
CREATE SEQUENCE BOARD_SEQ_POINT;

CREATE TABLE TABLE_BOARD_POINT(
   POINT_NUM NUMBER(10) PRIMARY KEY,   
   POINT_DATE TIMESTAMP,
   POINT_AMOUNT NUMBER(10),
   POINT_CONTENT VARCHAR2(500),
   user_Id varchar2(100),
   constraint POINT_MEMBER_FK foreign KEY(user_Id) references TABLE_USER(user_Id) ON DELETE CASCADE
);

----------------------------------
